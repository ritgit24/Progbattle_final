{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/campusCompass/assignment1/nextjs-dashboard/app/ui/round2.tsx"],"sourcesContent":["// // components/Round2AdminPanel.tsx\r\n// import { useState } from 'react';\r\n\r\n// export default function Round2AdminPanel({ isAdmin }: { isAdmin: boolean }) {\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n//   const [results, setResults] = useState<any>(null);\r\n//   const [error, setError] = useState<string | null>(null);\r\n\r\n//   const triggerRound2 = async () => {\r\n//     if (!isAdmin) return;\r\n    \r\n//     setIsLoading(true);\r\n//     setError(null);\r\n    \r\n//     try {\r\n//       const response = await fetch('http://localhost:8000/start-round2/', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//           'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n//         }\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error(await response.text());\r\n//       }\r\n\r\n//       const data = await response.json();\r\n//       setResults(data);\r\n//     } catch (err) {\r\n//       setError(err instanceof Error ? err.message : 'Failed to start tournament');\r\n//     } finally {\r\n//       setIsLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   if (!isAdmin) return null;\r\n\r\n//   return (\r\n//     <div className=\"max-w-4xl mx-auto p-6 bg-white rounded-lg shadow-md\">\r\n//       <h2 className=\"text-2xl font-bold mb-4 text-center\">Round 2 Tournament</h2>\r\n      \r\n//       <div className=\"flex justify-center mb-6\">\r\n//         <button\r\n//           onClick={triggerRound2}\r\n//           disabled={isLoading}\r\n//           className={`px-6 py-3 rounded-md text-white font-medium ${\r\n//             isLoading ? 'bg-gray-400' : 'bg-blue-600 hover:bg-blue-700'\r\n//           }`}\r\n//         >\r\n//           {isLoading ? 'Running Tournament...' : 'Start Round 2'}\r\n//         </button>\r\n//       </div>\r\n\r\n//       {error && (\r\n//         <div className=\"p-4 mb-4 text-red-700 bg-red-100 rounded-md\">\r\n//           Error: {error}\r\n//         </div>\r\n//       )}\r\n\r\n//       {results && (\r\n//         <div className=\"mt-6 space-y-4\">\r\n//           <h3 className=\"text-xl font-semibold\">Tournament Results</h3>\r\n          \r\n//           <div className=\"grid grid-cols-3 gap-4 font-medium bg-gray-100 p-2 rounded-t-md\">\r\n//             <div>Match</div>\r\n//             <div>Winner</div>\r\n//             <div>Details</div>\r\n//           </div>\r\n\r\n//           {results.matches?.map((match: any, index: number) => (\r\n//             <div key={index} className=\"grid grid-cols-3 gap-4 border-b py-2\">\r\n//               <div>{match.team1_name} vs {match.team2_name}</div>\r\n//               <div className={match.winner === 'unknown' ? 'text-yellow-600' : 'text-green-600'}>\r\n//                 {match.winner_name}\r\n//               </div>\r\n//               <div className=\"text-sm text-gray-600 truncate\">\r\n//                 {match.output?.split('\\n')[0] || 'No details'}\r\n//               </div>\r\n//             </div>\r\n//           ))}\r\n\r\n//           <div className=\"p-4 bg-gray-50 rounded-b-md\">\r\n//             <p><strong>Total Matches:</strong> {results.total_matches}</p>\r\n//             <p><strong>Winning Teams:</strong> {results.summary?.winners?.join(', ') || 'None'}</p>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n'use client'\r\nimport { useState } from 'react';\r\nimport { getCookie } from 'cookies-next';\r\n\r\n// export default function Round2AdminPanel() {\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n//   const [results, setResults] = useState<any>(null);\r\n//   const [error, setError] = useState<string | null>(null);\r\n\r\n//   const triggerRound2 = async () => {\r\n//     setIsLoading(true);\r\n//     setError(null);\r\n\r\n//     const token = getCookie('token');\r\n\r\n//         if (!token) \r\n//             {\r\n//           throw new Error('Authentication required. Please login again.');\r\n//         }\r\n    \r\n//     try {\r\n//       const response = await fetch('http://localhost:8000/start-round2/', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//           'Authorization': `Bearer ${token}`\r\n//         }\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         const errorData = await response.json();\r\n//         throw new Error(errorData.detail || 'Failed to start tournament');\r\n//       }\r\n\r\n//       const data = await response.json();\r\n//       setResults(data);\r\n//     } catch (err) {\r\n//       setError(err instanceof Error ? err.message : 'Failed to start tournament');\r\n//     } finally {\r\n//       setIsLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"max-w-4xl mx-auto p-6 bg-white rounded-lg shadow-md\">\r\n//       <h2 className=\"text-2xl font-bold mb-4 text-center\">Round 2 Tournament</h2>\r\n      \r\n//       <div className=\"flex justify-center mb-6\">\r\n//         <button\r\n//           onClick={triggerRound2}\r\n//           disabled={isLoading}\r\n//           className={`px-6 py-3 rounded-md text-white font-medium ${\r\n//             isLoading ? 'bg-gray-400' : 'bg-blue-600 hover:bg-blue-700'\r\n//           }`}\r\n//         >\r\n//           {isLoading ? 'Running Tournament...' : 'Start Round 2'}\r\n//         </button>\r\n//       </div>\r\n\r\n//       {error && (\r\n//         <div className=\"p-4 mb-4 text-red-700 bg-red-100 rounded-md\">\r\n//           Error: {error}\r\n//         </div>\r\n//       )}\r\n\r\n//       {results && (\r\n//         <div className=\"mt-6 space-y-4\">\r\n//           <h3 className=\"text-xl font-semibold\">Tournament Results</h3>\r\n          \r\n//           <div className=\"grid grid-cols-3 gap-4 font-medium bg-gray-100 p-2 rounded-t-md\">\r\n//             <div>Match</div>\r\n//             <div>Winner</div>\r\n//             <div>Details</div>\r\n//           </div>\r\n\r\n//           {results.matches?.map((match: any, index: number) => (\r\n//             <div key={index} className=\"grid grid-cols-3 gap-4 border-b py-2\">\r\n//               <div>{match.team1_name} vs {match.team2_name}</div>\r\n//               <div className={match.winner === 'unknown' ? 'text-yellow-600' : 'text-green-600'}>\r\n//                 {match.winner_name}\r\n//               </div>\r\n//               <div className=\"text-sm text-gray-600 truncate\">\r\n//                 {match.output?.split('\\n')[0] || 'No details'}\r\n//               </div>\r\n//             </div>\r\n//           ))}\r\n\r\n//           <div className=\"p-4 bg-gray-50 rounded-b-md\">\r\n//             <p><strong>Total Matches:</strong> {results.total_matches}</p>\r\n//             <p><strong>Winning Teams:</strong> {results.summary?.winners?.join(', ') || 'None'}</p>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default function Round2AdminPanel() {\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n//   const [tournamentData, setTournamentData] = useState<{\r\n//     status?: string;\r\n//     total_matches?: number;\r\n//     matches?: Array<{\r\n//       team1_name: string;\r\n//       team2_name: string;\r\n//       winner_name: string;\r\n//       output: string;\r\n//     }>;\r\n//     summary?: {\r\n//       winners: string[];\r\n//     };\r\n//   } | null>(null);\r\n//   const [error, setError] = useState<string | null>(null);\r\n\r\n//   const triggerRound2 = async () => {\r\n//     setIsLoading(true);\r\n//     setError(null);\r\n//     const token = getCookie('token');\r\n\r\n//         if (!token) \r\n//             {\r\n//           throw new Error('Authentication required. Please login again.');\r\n//         }\r\n    \r\n    \r\n//     try {\r\n//       const response = await fetch('http://localhost:8000/start-round2/', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//           'Authorization': `Bearer ${token}`\r\n//         }\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error(`HTTP error! status: ${response.status}`);\r\n//       }\r\n\r\n//       const data = await response.json();\r\n//       console.log(\"Backend response:\", data); // Debug log\r\n//       setTournamentData(data);\r\n//     } catch (err) {\r\n//       console.error(\"Tournament error:\", err);\r\n//       setError(err instanceof Error ? err.message : 'Failed to start tournament');\r\n//     } finally {\r\n//       setIsLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"max-w-4xl mx-auto p-6 bg-white rounded-lg shadow-md\">\r\n//       <h2 className=\"text-2xl font-bold mb-4 text-center\">Round 2 Tournament</h2>\r\n      \r\n//       <div className=\"flex justify-center mb-6\">\r\n//         <button\r\n//           onClick={triggerRound2}\r\n//           disabled={isLoading}\r\n//           className={`px-6 py-3 rounded-md text-white font-medium ${\r\n//             isLoading ? 'bg-gray-400' : 'bg-blue-600 hover:bg-blue-700'\r\n//           }`}\r\n//         >\r\n//           {isLoading ? 'Running Tournament...' : 'Start Round 2'}\r\n//         </button>\r\n//       </div>\r\n\r\n//       {error && (\r\n//         <div className=\"p-4 mb-4 text-red-700 bg-red-100 rounded-md\">\r\n//           Error: {error}\r\n//         </div>\r\n//       )}\r\n\r\n//       {tournamentData && (\r\n//         <div className=\"mt-6 space-y-4\">\r\n//           <h3 className=\"text-xl font-semibold\">Tournament Results</h3>\r\n          \r\n//           <div className=\"grid grid-cols-3 gap-4 font-medium bg-gray-100 p-2 rounded-t-md\">\r\n//             <div>Match</div>\r\n//             <div>Winner</div>\r\n//             <div>Details</div>\r\n//           </div>\r\n\r\n//           {tournamentData.matches?.map((match, index) => (\r\n//             <div key={index} className=\"grid grid-cols-3 gap-4 border-b py-2\">\r\n//               <div>{match.team1_name} vs {match.team2_name}</div>\r\n//               <div className={match.winner_name === 'Draw' ? 'text-yellow-600' : 'text-green-600'}>\r\n//                 {match.winner_name}\r\n//               </div>\r\n//               <div className=\"text-sm text-gray-600 truncate\">\r\n//                 {match.output.split('\\n')[0] || 'No details'}\r\n//               </div>\r\n//             </div>\r\n//           ))}\r\n\r\n//           <div className=\"p-4 bg-gray-50 rounded-b-md\">\r\n//             <p><strong>Total Matches:</strong> {tournamentData.total_matches}</p>\r\n//             <p><strong>Winning Teams:</strong> \r\n//               {tournamentData.summary?.winners?.length \r\n//                 ? tournamentData.summary.winners.join(', ') \r\n//                 : 'None'}\r\n//             </p>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }"],"names":[],"mappings":"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"}},
    {"offset": {"line": 262, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}