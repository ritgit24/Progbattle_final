{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/campusCompass/assignment1/nextjs-dashboard/app/ui/tournament-ui.tsx"],"sourcesContent":["// // app/dashboard/page.jsx\r\n// 'use client';\r\n// import { useState } from 'react';\r\n\r\n\r\n// export default function Dashboard() {\r\n//   // Hardcoded data\r\n//   const [topTeams] = useState([\r\n//     { id: 1, name: 'Quantum Coders', score: 1200 },\r\n//     // ... other teams\r\n//   ]);\r\n\r\n//   const [userTeam] = useState({\r\n//     name: 'Your Team Name',\r\n//     score: 650,\r\n//     rank: 12\r\n//   });\r\n\r\n//   const [selectedFile, setSelectedFile] = useState(null);\r\n//   const [isSubmitting, setIsSubmitting] = useState(false);\r\n//   const [submissionStatus, setSubmissionStatus] = useState(null);\r\n\r\n//   const handleFileChange = (e) => {\r\n//     setSelectedFile(e.target.files[0]);\r\n//     // Clear any previous status when new file is selected\r\n//     setSubmissionStatus(null);\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n    \r\n//     if (!selectedFile) {\r\n//       setSubmissionStatus({ \r\n//         success: false, \r\n//         message: 'Please select a file before submitting' \r\n//       });\r\n//       return;\r\n//     }\r\n\r\n//     // Check file extension\r\n//     if (!selectedFile.name.endsWith('.py')) {\r\n//       setSubmissionStatus({ \r\n//         success: false, \r\n//         message: 'Only Python (.py) files are allowed' \r\n//       });\r\n//       return;\r\n//     }\r\n\r\n//     setIsSubmitting(true);\r\n//     setSubmissionStatus(null); // Clear previous status\r\n\r\n//     try {\r\n//       // Simulate API call - replace with actual fetch to your backend\r\n//       const response = await new Promise(resolve => {\r\n//         setTimeout(() => {\r\n//           resolve({\r\n//             ok: true,\r\n//             json: () => Promise.resolve({ message: 'Submission received!' })\r\n//           });\r\n//         }, 1500);\r\n//       });\r\n\r\n//       if (response.ok) {\r\n//         setSubmissionStatus({ \r\n//           success: true, \r\n//           message: 'File submitted successfully! Your bot is being evaluated.' \r\n//         });\r\n//         setSelectedFile(null);\r\n//       } else {\r\n//         const errorData = await response.json();\r\n//         throw new Error(errorData.message || 'Submission failed');\r\n//       }\r\n//     } catch (error) {\r\n//       setSubmissionStatus({ \r\n//         success: false, \r\n//         message: error.message || 'An error occurred during submission'\r\n//       });\r\n//     } finally {\r\n//       setIsSubmitting(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"flex h-screen bg-gray-100\">\r\n//       {/* ... (sidebar code remains the same) ... */}\r\n\r\n//       {/* Main Content */}\r\n//       <div className=\"flex-1 p-8 overflow-auto\">\r\n//         {/* ... (other content remains the same) ... */}\r\n\r\n//         <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n//           {/* File upload area */}\r\n//           <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center\">\r\n//             <UploadIcon className=\"mx-auto h-12 w-12 text-gray-400 mb-2\" />\r\n//             <label htmlFor=\"file-upload\" className=\"cursor-pointer\">\r\n//               <span className=\"text-indigo-600 font-medium\">\r\n//                 {selectedFile ? selectedFile.name : 'Click to select your Python file'}\r\n//               </span>\r\n//               <input\r\n//                 id=\"file-upload\"\r\n//                 name=\"file-upload\"\r\n//                 type=\"file\"\r\n//                 className=\"sr-only\"\r\n//                 accept=\".py\"\r\n//                 onChange={handleFileChange}\r\n//               />\r\n//             </label>\r\n//             <p className=\"text-xs text-gray-500 mt-2\">Only .py files accepted</p>\r\n//           </div>\r\n\r\n//           {/* Status message with proper checks */}\r\n//           {submissionStatus && (\r\n//             <div className={`p-3 rounded-md ${\r\n//               submissionStatus.success \r\n//                 ? 'bg-green-100 text-green-800' \r\n//                 : 'bg-red-100 text-red-800'\r\n//             }`}>\r\n//               {submissionStatus.message}\r\n//             </div>\r\n//           )}\r\n\r\n//           <button\r\n//             type=\"submit\"\r\n//             disabled={isSubmitting || !selectedFile}\r\n//             className={`w-full bg-indigo-600 text-white py-2 px-4 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 ${\r\n//               isSubmitting || !selectedFile ? 'opacity-70 cursor-not-allowed' : ''\r\n//             }`}\r\n//           >\r\n//             {isSubmitting ? 'Submitting...' : 'Submit Bot'}\r\n//           </button>\r\n//         </form>\r\n\r\n//         {/* ... (rest of the content) ... */}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n// app/dashboard/page.jsx\r\n// 'use client';\r\n// import { useState } from 'react';\r\n\r\n// export default function Dashboard() {\r\n//   // Hardcoded data\r\n//   const [topTeams] = useState([\r\n//     { id: 1, name: 'Quantum Coders', score: 1200 },\r\n//     { id: 2, name: 'Byte Force', score: 1150 },\r\n//     { id: 3, name: 'Script Kiddies', score: 1100 },\r\n//     { id: 4, name: 'Python Warriors', score: 1050 },\r\n//     { id: 5, name: 'Code Breakers', score: 950 },\r\n//     { id: 6, name: 'Algorithm Avengers', score: 900 },\r\n//     { id: 7, name: 'Syntax Squad', score: 850 },\r\n//     { id: 8, name: 'Binary Titans', score: 800 },\r\n//     { id: 9, name: 'Debug Dynasty', score: 750 },\r\n//     { id: 10, name: 'Logic Legends', score: 700 },\r\n//   ]);\r\n\r\n//   const [userTeam] = useState({\r\n//     name: 'Your Team Name',\r\n//     score: 650,\r\n//     rank: 12\r\n//   });\r\n\r\n//   const [selectedFile, setSelectedFile] = useState(null);\r\n//   const [isSubmitting, setIsSubmitting] = useState(false);\r\n//   const [submissionStatus, setSubmissionStatus] = useState(null);\r\n\r\n//   const handleFileChange = (e) => {\r\n//     setSelectedFile(e.target.files[0]);\r\n//     setSubmissionStatus(null);\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n    \r\n//     if (!selectedFile) {\r\n//       setSubmissionStatus({ \r\n//         success: false, \r\n//         message: 'Please select a file before submitting' \r\n//       });\r\n//       return;\r\n//     }\r\n\r\n//     if (!selectedFile.name.endsWith('.py')) {\r\n//       setSubmissionStatus({ \r\n//         success: false, \r\n//         message: 'Only Python (.py) files are allowed' \r\n//       });\r\n//       return;\r\n//     }\r\n\r\n//     setIsSubmitting(true);\r\n\r\n//     try {\r\n//       // Simulate API call\r\n//       await new Promise(resolve => setTimeout(resolve, 1500));\r\n//       setSubmissionStatus({ \r\n//         success: true, \r\n//         message: 'File submitted successfully! Your bot is being evaluated.' \r\n//       });\r\n//       setSelectedFile(null);\r\n//     } catch (error) {\r\n//       setSubmissionStatus({ \r\n//         success: false, \r\n//         message: 'An error occurred during submission'\r\n//       });\r\n//     } finally {\r\n//       setIsSubmitting(false);\r\n//     }\r\n//   };\r\n\r\n//   // SVG Icons\r\n//   const TrophyIcon = () => (\r\n//     <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n//       <path d=\"M6 9H4.5a2.5 2.5 0 0 1 0-5H6\"></path>\r\n//       <path d=\"M18 9h1.5a2.5 2.5 0 0 0 0-5H18\"></path>\r\n//       <path d=\"M4 22h16\"></path>\r\n//       <path d=\"M10 14.66V17c0 .55-.47.98-.97 1.21C7.85 18.75 7 20.24 7 22\"></path>\r\n//       <path d=\"M14 14.66V17c0 .55.47.98.97 1.21C16.15 18.75 17 20.24 17 22\"></path>\r\n//       <path d=\"M18 2H6v7a6 6 0 0 0 12 0V2Z\"></path>\r\n//     </svg>\r\n//   );\r\n\r\n//   const UsersIcon = () => (\r\n//     <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n//       <path d=\"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\"></path>\r\n//       <circle cx=\"9\" cy=\"7\" r=\"4\"></circle>\r\n//       <path d=\"M22 21v-2a4 4 0 0 0-3-3.87\"></path>\r\n//       <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"></path>\r\n//     </svg>\r\n//   );\r\n\r\n//   const UploadIcon = () => (\r\n//     <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n//       <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path>\r\n//       <polyline points=\"17 8 12 3 7 8\"></polyline>\r\n//       <line x1=\"12\" y1=\"3\" x2=\"12\" y2=\"15\"></line>\r\n//     </svg>\r\n//   );\r\n\r\n//   return (\r\n//     <div className=\"flex h-screen bg-gray-100\">\r\n//       {/* Sidebar */}\r\n//       <div className=\"w-64 bg-indigo-800 text-white p-4 flex flex-col\">\r\n//         <div className=\"mb-8\">\r\n//           <h2 className=\"text-xl font-bold flex items-center gap-2\">\r\n//             <TrophyIcon />\r\n//             Leaderboard\r\n//           </h2>\r\n//         </div>\r\n\r\n//         {/* Top Teams */}\r\n//         <div className=\"mb-8\">\r\n//           <h3 className=\"text-sm font-semibold uppercase tracking-wider mb-2\">\r\n//             Top 10 Teams\r\n//           </h3>\r\n//           <ul className=\"space-y-2\">\r\n//             {topTeams.map((team, index) => (\r\n//               <li key={team.id} className=\"flex justify-between items-center\">\r\n//                 <span className=\"text-sm\">\r\n//                   {index + 1}. {team.name}\r\n//                 </span>\r\n//                 <span className=\"text-yellow-300 font-medium\">{team.score}</span>\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//         </div>\r\n\r\n//         {/* User Team */}\r\n//         <div className=\"mt-auto\">\r\n//           <h3 className=\"text-sm font-semibold uppercase tracking-wider mb-2 flex items-center gap-2\">\r\n//             <UsersIcon />\r\n//             Your Team\r\n//           </h3>\r\n//           <div className=\"bg-indigo-700 p-3 rounded-lg\">\r\n//             <p className=\"font-medium\">{userTeam.name}</p>\r\n//             <div className=\"flex justify-between mt-1\">\r\n//               <span className=\"text-sm\">Rank: #{userTeam.rank}</span>\r\n//               <span className=\"text-yellow-300 font-medium\">{userTeam.score}</span>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Main Content */}\r\n//       <div className=\"flex-1 p-8 overflow-auto\">\r\n//         <h1 className=\"text-3xl font-bold text-gray-800 mb-6\">Hello, Team Member!</h1>\r\n        \r\n//         <div className=\"bg-white rounded-lg shadow-md p-6 mb-8\">\r\n//           <h2 className=\"text-xl font-semibold mb-4\">Welcome, {userTeam.name}!</h2>\r\n//           <p className=\"text-gray-600 mb-6\">\r\n//             Submit your Python bot file to compete in the tournament. Make sure your file follows\r\n//             the competition guidelines.\r\n//           </p>\r\n\r\n//           <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n//             <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center\">\r\n//               <div className=\"mx-auto w-12 h-12 mb-2 text-gray-400\">\r\n//                 <UploadIcon />\r\n//               </div>\r\n//               <label htmlFor=\"file-upload\" className=\"cursor-pointer\">\r\n//                 <span className=\"text-indigo-600 font-medium\">\r\n//                   {selectedFile ? selectedFile.name : 'Click to select your Python file'}\r\n//                 </span>\r\n//                 <input\r\n//                   id=\"file-upload\"\r\n//                   name=\"file-upload\"\r\n//                   type=\"file\"\r\n//                   className=\"sr-only\"\r\n//                   accept=\".py\"\r\n//                   onChange={handleFileChange}\r\n//                 />\r\n//               </label>\r\n//               <p className=\"text-xs text-gray-500 mt-2\">Only .py files accepted</p>\r\n//             </div>\r\n\r\n//             {submissionStatus && (\r\n//               <div className={`p-3 rounded-md ${\r\n//                 submissionStatus.success \r\n//                   ? 'bg-green-100 text-green-800' \r\n//                   : 'bg-red-100 text-red-800'\r\n//               }`}>\r\n//                 {submissionStatus.message}\r\n//               </div>\r\n//             )}\r\n\r\n//             <button\r\n//               type=\"submit\"\r\n//               disabled={isSubmitting || !selectedFile}\r\n//               className={`w-full bg-indigo-600 text-white py-2 px-4 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 ${\r\n//                 isSubmitting || !selectedFile ? 'opacity-70 cursor-not-allowed' : ''\r\n//               }`}\r\n//             >\r\n//               {isSubmitting ? 'Submitting...' : 'Submit Bot'}\r\n//             </button>\r\n//           </form>\r\n//         </div>\r\n\r\n//         {/* Recent Activity Section */}\r\n//         <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n//           <h2 className=\"text-xl font-semibold mb-4\">Recent Activity</h2>\r\n//           <div className=\"text-gray-500 italic\">\r\n//             No recent activity yet. Submit your first bot to see results here!\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n// app/dashboard/page.jsx\r\n'use client';\r\nimport { useState } from 'react';\r\n\r\nexport default function Tournament() {\r\n  // Team data with proper initialization\r\n  const [topTeams] = useState([\r\n    { id: 1, name: 'Quantum Coders', score: 1200 },\r\n    { id: 2, name: 'Byte Force', score: 1150 },\r\n    { id: 3, name: 'Script Kiddies', score: 1100 },\r\n    { id: 4, name: 'Python Warriors', score: 1050 },\r\n    { id: 5, name: 'Code Breakers', score: 950 },\r\n    { id: 6, name: 'Algorithm Avengers', score: 900 },\r\n    { id: 7, name: 'Syntax Squad', score: 850 },\r\n    { id: 8, name: 'Binary Titans', score: 800 },\r\n    { id: 9, name: 'Debug Dynasty', score: 750 },\r\n    { id: 10, name: 'Logic Legends', score: 700 },\r\n    // ... other teams\r\n  ]);\r\n\r\n  const [userTeam] = useState({\r\n    name: 'Your Team Name',\r\n    score: 650,\r\n    rank: 12\r\n  });\r\n\r\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [submissionStatus, setSubmissionStatus] = useState<{\r\n    success: boolean;\r\n    message: string;\r\n  } | null>(null);\r\n\r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      setSelectedFile(e.target.files[0]);\r\n      setSubmissionStatus(null);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    // Validate file exists\r\n    if (!selectedFile) {\r\n      setSubmissionStatus({ \r\n        success: false, \r\n        message: 'Please select a file before submitting' \r\n      });\r\n      return;\r\n    }\r\n\r\n    // Validate file type\r\n    if (!selectedFile.name.endsWith('.py')) {\r\n      setSubmissionStatus({ \r\n        success: false, \r\n        message: 'Only Python (.py) files are allowed' \r\n      });\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n\r\n    try {\r\n      // Simulate API call - replace with actual API call\r\n      await new Promise(resolve => setTimeout(resolve, 1500));\r\n      \r\n      setSubmissionStatus({ \r\n        success: true, \r\n        message: 'File submitted successfully! Your bot is being evaluated.' \r\n      });\r\n      setSelectedFile(null);\r\n    } catch (error) {\r\n      setSubmissionStatus({ \r\n        success: false, \r\n        message: error instanceof Error ? error.message : 'An error occurred during submission'\r\n      });\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // Simple SVG icons as components\r\n  const TrophyIcon = () => (\r\n    <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} \r\n        d=\"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\" />\r\n    </svg>\r\n  );\r\n\r\n  const UsersIcon = () => (\r\n    <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} \r\n        d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z\" />\r\n    </svg>\r\n  );\r\n\r\n  const UploadIcon = () => (\r\n    <svg className=\"w-12 h-12 mx-auto mb-2 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} \r\n        d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\r\n    </svg>\r\n  );\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-100\">\r\n      {/* Sidebar */}\r\n      <div className=\"w-64 bg-indigo-800 text-white p-4 flex flex-col\">\r\n        <div className=\"mb-8\">\r\n          <h2 className=\"text-xl font-bold flex items-center gap-2\">\r\n            <TrophyIcon />\r\n            Leaderboard\r\n          </h2>\r\n        </div>\r\n\r\n        {/* Top Teams */}\r\n        <div className=\"mb-8\">\r\n          <h3 className=\"text-sm font-semibold uppercase tracking-wider mb-2\">\r\n            Top 10 Teams\r\n          </h3>\r\n          <ul className=\"space-y-2\">\r\n            {topTeams.map((team, index) => (\r\n              <li key={team.id} className=\"flex justify-between items-center\">\r\n                <span className=\"text-sm\">\r\n                  {index + 1}. {team.name}\r\n                </span>\r\n                <span className=\"text-yellow-300 font-medium\">{team.score}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        {/* User Team */}\r\n        <div className=\"mt-auto\">\r\n          <h3 className=\"text-sm font-semibold uppercase tracking-wider mb-2 flex items-center gap-2\">\r\n            <UsersIcon />\r\n            Your Team\r\n          </h3>\r\n          <div className=\"bg-indigo-700 p-3 rounded-lg\">\r\n            <p className=\"font-medium\">{userTeam?.name || 'Loading...'}</p>\r\n            <div className=\"flex justify-between mt-1\">\r\n              <span className=\"text-sm\">Rank: #{userTeam?.rank || '--'}</span>\r\n              <span className=\"text-yellow-300 font-medium\">\r\n                {userTeam?.score || '0'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"flex-1 p-8 overflow-auto\">\r\n        <h1 className=\"text-3xl font-bold text-gray-800 mb-6\">Hello, Team Member!</h1>\r\n        \r\n        <div className=\"bg-white rounded-lg shadow-md p-6 mb-8\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">\r\n            Welcome, {userTeam?.name || 'Team Member'}!\r\n          </h2>\r\n          <p className=\"text-gray-600 mb-6\">\r\n            Submit your Python bot file to compete in the tournament.\r\n          </p>\r\n\r\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n            <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center\">\r\n              <UploadIcon />\r\n              <label htmlFor=\"file-upload\" className=\"cursor-pointer\">\r\n                <span className=\"text-indigo-600 font-medium\">\r\n                  {selectedFile?.name || 'Click to select your Python file'}\r\n                </span>\r\n                <input\r\n                  id=\"file-upload\"\r\n                  name=\"file-upload\"\r\n                  type=\"file\"\r\n                  className=\"sr-only\"\r\n                  accept=\".py\"\r\n                  onChange={handleFileChange}\r\n                />\r\n              </label>\r\n              <p className=\"text-xs text-gray-500 mt-2\">Only .py files accepted</p>\r\n            </div>\r\n\r\n            {submissionStatus && (\r\n              <div className={`p-3 rounded-md ${\r\n                submissionStatus?.success \r\n                  ? 'bg-green-100 text-green-800' \r\n                  : 'bg-red-100 text-red-800'\r\n              }`}>\r\n                {submissionStatus?.message}\r\n              </div>\r\n            )}\r\n\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isSubmitting || !selectedFile}\r\n              className={`w-full bg-indigo-600 text-white py-2 px-4 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 ${\r\n                isSubmitting || !selectedFile ? 'opacity-70 cursor-not-allowed' : ''\r\n              }`}\r\n            >\r\n              {isSubmitting ? 'Submitting...' : 'Submit Bot'}\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        {/* Recent Activity Section */}\r\n        <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Recent Activity</h2>\r\n          <div className=\"text-gray-500 italic\">\r\n            {submissionStatus?.success \r\n              ? 'Your submission is being processed' \r\n              : 'No recent activity yet'}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 805, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 815, "column": 0}, "map": {"version":3,"sources":["file://C%3A/campusCompass/assignment1/nextjs-dashboard/node_modules/.pnpm/next%4015.1.6_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,qMAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0]}},
    {"offset": {"line": 817, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}